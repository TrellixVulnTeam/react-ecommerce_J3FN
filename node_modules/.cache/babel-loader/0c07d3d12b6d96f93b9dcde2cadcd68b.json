{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\"; // const PRODUCTS_API = `\n// {\n//   products(first: ${visable}) {\n//     nodes {\n//       ... on VariableProduct {\n//         id\n//         name\n//       }\n//       ... on ExternalProduct {\n//         id\n//         name\n//       }\n//       ... on GroupProduct {\n//         id\n//         name\n//       }\n//       ... on SimpleProduct {\n//         id\n//         name\n//         uri\n//         slug\n//         sku\n//         shortDescription(format: RENDERED)\n//         salePrice(format: FORMATTED)\n//         shippingClassId\n//         shippingRequired\n//         shippingTaxable\n//         reviewCount\n//         reviews {\n//           averageRating\n//           edges {\n//             rating\n//           }\n//         }\n//         regularPrice(format: FORMATTED)\n//         price(format: FORMATTED)\n//         onSale\n//         link\n//         featuredImageDatabaseId\n//         description(format: RAW)\n//         date\n//         dateOnSaleTo\n//         dateOnSaleFrom\n//         averageRating\n//         manageStock\n//         image {\n//           sourceUrl(size: MEDIUM)\n//         }\n//         databaseId\n//         stockQuantity\n//         stockStatus\n//       }\n//     }\n//     pageInfo {\n//       hasNextPage\n//       hasPreviousPage\n//     }\n//   }\n// }\n// `\n\nexport const listProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(\"http://localhost/wordpress/graphql/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: `\n            {\n              products(first: 50) {\n                nodes {\n                  ... on VariableProduct {\n                    id\n                    name\n                  }\n                  ... on ExternalProduct {\n                    id\n                    name\n                  }\n                  ... on GroupProduct {\n                    id\n                    name\n                  }\n                  ... on SimpleProduct {\n                    id\n                    name\n                    uri\n                    slug\n                    sku\n                    shortDescription(format: RENDERED)\n                    salePrice(format: FORMATTED)\n                    shippingClassId\n                    shippingRequired\n                    shippingTaxable\n                    reviewCount\n                    reviews {\n                      averageRating\n                      edges {\n                        rating\n                      }\n                    }\n                    regularPrice(format: FORMATTED)\n                    price(format: FORMATTED)\n                    onSale\n                    link\n                    featuredImageDatabaseId\n                    description(format: RAW)\n                    date\n                    dateOnSaleTo\n                    dateOnSaleFrom\n                    averageRating\n                    manageStock\n                    image {\n                      sourceUrl(size: MEDIUM)\n                    }\n                    databaseId\n                    stockQuantity\n                    stockStatus\n                  }\n                }\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n              }\n            }\n            `\n      })\n    }).then(response => response.json()).then(response => response.data.data.products.nodes); // dispatch({\n    //     type: PRODUCT_LIST_SUCCESS,\n    //     playload: data\n    // })\n\n    return data;\n  } catch (error) {// dispatch({\n    //     type: PRODUCT_LIST_FAIL,\n    //     playload:\n    //         error.response && error.response.data.message ? error.response.data.message : error.message,\n    // });\n  }\n};\nexport const detailProduct = slug => async dispatch => {\n  const PRODUCT_API = `\n    product(id: \"${slug}\", idType: SLUG) {\n      id\n      name\n      slug\n      ... on SimpleProduct {\n        id\n        name\n      }\n    }`;\n\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(`http://localhost/wordpress/graphql/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: PRODUCT_API\n      })\n    }).then(response => console.log(response));\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      playload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      playload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProduct","dispatch","type","data","method","headers","JSON","stringify","query","then","response","json","products","nodes","error","detailProduct","slug","PRODUCT_API","console","log","playload","message"],"sources":["D:/ReactJS-Ecommerce/react-ecommerce/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\"\r\n\r\n// const PRODUCTS_API = `\r\n// {\r\n//   products(first: ${visable}) {\r\n//     nodes {\r\n//       ... on VariableProduct {\r\n//         id\r\n//         name\r\n//       }\r\n//       ... on ExternalProduct {\r\n//         id\r\n//         name\r\n//       }\r\n//       ... on GroupProduct {\r\n//         id\r\n//         name\r\n//       }\r\n//       ... on SimpleProduct {\r\n//         id\r\n//         name\r\n//         uri\r\n//         slug\r\n//         sku\r\n//         shortDescription(format: RENDERED)\r\n//         salePrice(format: FORMATTED)\r\n//         shippingClassId\r\n//         shippingRequired\r\n//         shippingTaxable\r\n//         reviewCount\r\n//         reviews {\r\n//           averageRating\r\n//           edges {\r\n//             rating\r\n//           }\r\n//         }\r\n//         regularPrice(format: FORMATTED)\r\n//         price(format: FORMATTED)\r\n//         onSale\r\n//         link\r\n//         featuredImageDatabaseId\r\n//         description(format: RAW)\r\n//         date\r\n//         dateOnSaleTo\r\n//         dateOnSaleFrom\r\n//         averageRating\r\n//         manageStock\r\n//         image {\r\n//           sourceUrl(size: MEDIUM)\r\n//         }\r\n//         databaseId\r\n//         stockQuantity\r\n//         stockStatus\r\n//       }\r\n//     }\r\n//     pageInfo {\r\n//       hasNextPage\r\n//       hasPreviousPage\r\n//     }\r\n//   }\r\n// }\r\n// `\r\nexport const listProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const data  = await \r\n        axios(\"http://localhost/wordpress/graphql/\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            data: JSON.stringify({query:  `\r\n            {\r\n              products(first: 50) {\r\n                nodes {\r\n                  ... on VariableProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on ExternalProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on GroupProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on SimpleProduct {\r\n                    id\r\n                    name\r\n                    uri\r\n                    slug\r\n                    sku\r\n                    shortDescription(format: RENDERED)\r\n                    salePrice(format: FORMATTED)\r\n                    shippingClassId\r\n                    shippingRequired\r\n                    shippingTaxable\r\n                    reviewCount\r\n                    reviews {\r\n                      averageRating\r\n                      edges {\r\n                        rating\r\n                      }\r\n                    }\r\n                    regularPrice(format: FORMATTED)\r\n                    price(format: FORMATTED)\r\n                    onSale\r\n                    link\r\n                    featuredImageDatabaseId\r\n                    description(format: RAW)\r\n                    date\r\n                    dateOnSaleTo\r\n                    dateOnSaleFrom\r\n                    averageRating\r\n                    manageStock\r\n                    image {\r\n                      sourceUrl(size: MEDIUM)\r\n                    }\r\n                    databaseId\r\n                    stockQuantity\r\n                    stockStatus\r\n                  }\r\n                }\r\n                pageInfo {\r\n                  hasNextPage\r\n                  hasPreviousPage\r\n                }\r\n              }\r\n            }\r\n            `})\r\n        })\r\n        .then(response => response.json())\r\n        .then((response) => response.data.data.products.nodes)\r\n        // dispatch({\r\n        //     type: PRODUCT_LIST_SUCCESS,\r\n        //     playload: data\r\n        // })\r\n        return data;\r\n    } catch (error) {\r\n        // dispatch({\r\n        //     type: PRODUCT_LIST_FAIL,\r\n        //     playload:\r\n        //         error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        // });\r\n    }\r\n}\r\n\r\n\r\nexport const detailProduct = (slug) => async (dispatch) => {\r\n  const PRODUCT_API = `\r\n    product(id: \"${slug}\", idType: SLUG) {\r\n      id\r\n      name\r\n      slug\r\n      ... on SimpleProduct {\r\n        id\r\n        name\r\n      }\r\n    }`\r\n  try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST })\r\n      const data  = await \r\n      axios(`http://localhost/wordpress/graphql/`, {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          data: JSON.stringify({query: PRODUCT_API})\r\n      })\r\n      .then((response) => console.log(response))\r\n      dispatch({\r\n          type: PRODUCT_LIST_SUCCESS,\r\n          playload: data\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          playload:\r\n              error.response && error.response.data.message ? error.response.data.message : error.message,\r\n      });\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACjD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAR,CAAD,CAAR;IACA,MAAMK,IAAI,GAAI,MACdP,KAAK,CAAC,qCAAD,EAAwC;MACzCQ,MAAM,EAAE,MADiC;MAEzCC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFgC;MAGzCF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;QAACC,KAAK,EAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MA3DiC,CAAf;IAHmC,CAAxC,CAAL,CAgECC,IAhED,CAgEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAhElB,EAiECF,IAjED,CAiEOC,QAAD,IAAcA,QAAQ,CAACP,IAAT,CAAcA,IAAd,CAAmBS,QAAnB,CAA4BC,KAjEhD,CADA,CAFA,CAqEA;IACA;IACA;IACA;;IACA,OAAOV,IAAP;EACH,CA1ED,CA0EE,OAAOW,KAAP,EAAc,CACZ;IACA;IACA;IACA;IACA;EACH;AACJ,CAlFM;AAqFP,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU,MAAOf,QAAP,IAAoB;EACzD,MAAMgB,WAAW,GAAI;AACvB,mBAAmBD,IAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATE;;EAUA,IAAI;IACAf,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAR,CAAD,CAAR;IACA,MAAMK,IAAI,GAAI,MACdP,KAAK,CAAE,qCAAF,EAAwC;MACzCQ,MAAM,EAAE,MADiC;MAEzCC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFgC;MAGzCF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;QAACC,KAAK,EAAES;MAAR,CAAf;IAHmC,CAAxC,CAAL,CAKCR,IALD,CAKOC,QAAD,IAAcQ,OAAO,CAACC,GAAR,CAAYT,QAAZ,CALpB,CADA;IAOAT,QAAQ,CAAC;MACLC,IAAI,EAAEH,oBADD;MAELqB,QAAQ,EAAEjB;IAFL,CAAD,CAAR;EAIH,CAbD,CAaE,OAAOW,KAAP,EAAc;IACZb,QAAQ,CAAC;MACLC,IAAI,EAAEL,iBADD;MAELuB,QAAQ,EACJN,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBkB,OAAtC,GAAgDP,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBkB,OAApE,GAA8EP,KAAK,CAACO;IAHnF,CAAD,CAAR;EAKH;AACF,CA/BM"},"metadata":{},"sourceType":"module"}