{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\";\n\nfunction getProduct(numberShow) {\n  return dispatch => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    fetch(\"http://localhost/wordpress/graphql/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: `\n      {\n        products(first: ${numberShow}) {\n          nodes {\n            ... on VariableProduct {\n              id\n              name\n            }\n            ... on ExternalProduct {\n              id\n              name\n            }\n            ... on GroupProduct {\n              id\n              name\n            }\n            ... on SimpleProduct {\n              id\n              name\n              uri\n              slug\n              sku\n              shortDescription(format: RENDERED)\n              salePrice(format: FORMATTED)\n              shippingClassId\n              shippingRequired\n              shippingTaxable\n              reviewCount\n              reviews {\n                averageRating\n                edges {\n                  rating\n                }\n              }\n              regularPrice(format: FORMATTED)\n              price(format: FORMATTED)\n              onSale\n              link\n              featuredImageDatabaseId\n              description(format: RAW)\n              date\n              dateOnSaleTo\n              dateOnSaleFrom\n              averageRating\n              manageStock\n              image {\n                sourceUrl(size: MEDIUM)\n              }\n              databaseId\n              stockQuantity\n              stockStatus\n            }\n          }\n          pageInfo {\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n      `\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        playload: res.data.data.products.nodes\n      });\n      return res.data.data.products.nodes;\n    }).catch(error => {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        playload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    });\n  };\n}\n\nexport default getProduct; // export const listProduct = () => async (dispatch, numberShow) => {\n//     try {\n//         dispatch({ type: PRODUCT_LIST_REQUEST })\n//         const data  = await \n//         axios(\"http://localhost/wordpress/graphql/\", {\n//             method: \"POST\",\n//             headers: {\"Content-Type\": \"application/json\"},\n//             data: JSON.stringify({query:  `\n//             {\n//               products(first: ${numberShow}) {\n//                 nodes {\n//                   ... on VariableProduct {\n//                     id\n//                     name\n//                   }\n//                   ... on ExternalProduct {\n//                     id\n//                     name\n//                   }\n//                   ... on GroupProduct {\n//                     id\n//                     name\n//                   }\n//                   ... on SimpleProduct {\n//                     id\n//                     name\n//                     uri\n//                     slug\n//                     sku\n//                     shortDescription(format: RENDERED)\n//                     salePrice(format: FORMATTED)\n//                     shippingClassId\n//                     shippingRequired\n//                     shippingTaxable\n//                     reviewCount\n//                     reviews {\n//                       averageRating\n//                       edges {\n//                         rating\n//                       }\n//                     }\n//                     regularPrice(format: FORMATTED)\n//                     price(format: FORMATTED)\n//                     onSale\n//                     link\n//                     featuredImageDatabaseId\n//                     description(format: RAW)\n//                     date\n//                     dateOnSaleTo\n//                     dateOnSaleFrom\n//                     averageRating\n//                     manageStock\n//                     image {\n//                       sourceUrl(size: MEDIUM)\n//                     }\n//                     databaseId\n//                     stockQuantity\n//                     stockStatus\n//                   }\n//                 }\n//                 pageInfo {\n//                   hasNextPage\n//                   hasPreviousPage\n//                 }\n//               }\n//             }\n//             `})\n//         })\n//         // .then(response => response.json())\n//         .then((response) => response.data.data.products.nodes)\n//         dispatch({\n//             type: PRODUCT_LIST_SUCCESS,\n//             playload: data\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: PRODUCT_LIST_FAIL,\n//             playload:\n//                 error.response && error.response.data.message ? error.response.data.message : error.message,\n//         });\n//     }\n// }\n\nexport const detailProduct = slug => async dispatch => {\n  const PRODUCT_API = `\n    product(id: \"${slug}\", idType: SLUG) {\n      id\n      name\n      slug\n      ... on SimpleProduct {\n        id\n        name\n      }\n    }`;\n\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(`http://localhost/wordpress/graphql/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: PRODUCT_API\n      })\n    }).then(response => console.log(response));\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      playload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      playload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","getProduct","numberShow","dispatch","type","fetch","method","headers","data","JSON","stringify","query","then","res","json","error","playload","products","nodes","catch","response","message","detailProduct","slug","PRODUCT_API","console","log"],"sources":["D:/ReactJS-Ecommerce/react-ecommerce/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\"\r\n\r\nfunction getProduct(numberShow) {\r\n  return dispatch => {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    fetch(\"http://localhost/wordpress/graphql/\", {\r\n      method: \"POST\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      data: JSON.stringify({query:  `\r\n      {\r\n        products(first: ${numberShow}) {\r\n          nodes {\r\n            ... on VariableProduct {\r\n              id\r\n              name\r\n            }\r\n            ... on ExternalProduct {\r\n              id\r\n              name\r\n            }\r\n            ... on GroupProduct {\r\n              id\r\n              name\r\n            }\r\n            ... on SimpleProduct {\r\n              id\r\n              name\r\n              uri\r\n              slug\r\n              sku\r\n              shortDescription(format: RENDERED)\r\n              salePrice(format: FORMATTED)\r\n              shippingClassId\r\n              shippingRequired\r\n              shippingTaxable\r\n              reviewCount\r\n              reviews {\r\n                averageRating\r\n                edges {\r\n                  rating\r\n                }\r\n              }\r\n              regularPrice(format: FORMATTED)\r\n              price(format: FORMATTED)\r\n              onSale\r\n              link\r\n              featuredImageDatabaseId\r\n              description(format: RAW)\r\n              date\r\n              dateOnSaleTo\r\n              dateOnSaleFrom\r\n              averageRating\r\n              manageStock\r\n              image {\r\n                sourceUrl(size: MEDIUM)\r\n              }\r\n              databaseId\r\n              stockQuantity\r\n              stockStatus\r\n            }\r\n          }\r\n          pageInfo {\r\n            hasNextPage\r\n            hasPreviousPage\r\n          }\r\n        }\r\n      }\r\n      `})\r\n    })\r\n    .then((res) => res.json())\r\n    .then(res => {\r\n      if(res.error){\r\n        throw(res.error);\r\n      }\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        playload: res.data.data.products.nodes\r\n      })\r\n      return res.data.data.products.nodes;\r\n    })\r\n    .catch(error => {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        playload:\r\n        error.response && error.response.data.message ? error.response.data.message : error.message,\r\n      })\r\n    });\r\n  }\r\n}\r\nexport default getProduct\r\n// export const listProduct = () => async (dispatch, numberShow) => {\r\n//     try {\r\n//         dispatch({ type: PRODUCT_LIST_REQUEST })\r\n//         const data  = await \r\n//         axios(\"http://localhost/wordpress/graphql/\", {\r\n//             method: \"POST\",\r\n//             headers: {\"Content-Type\": \"application/json\"},\r\n//             data: JSON.stringify({query:  `\r\n//             {\r\n//               products(first: ${numberShow}) {\r\n//                 nodes {\r\n//                   ... on VariableProduct {\r\n//                     id\r\n//                     name\r\n//                   }\r\n//                   ... on ExternalProduct {\r\n//                     id\r\n//                     name\r\n//                   }\r\n//                   ... on GroupProduct {\r\n//                     id\r\n//                     name\r\n//                   }\r\n//                   ... on SimpleProduct {\r\n//                     id\r\n//                     name\r\n//                     uri\r\n//                     slug\r\n//                     sku\r\n//                     shortDescription(format: RENDERED)\r\n//                     salePrice(format: FORMATTED)\r\n//                     shippingClassId\r\n//                     shippingRequired\r\n//                     shippingTaxable\r\n//                     reviewCount\r\n//                     reviews {\r\n//                       averageRating\r\n//                       edges {\r\n//                         rating\r\n//                       }\r\n//                     }\r\n//                     regularPrice(format: FORMATTED)\r\n//                     price(format: FORMATTED)\r\n//                     onSale\r\n//                     link\r\n//                     featuredImageDatabaseId\r\n//                     description(format: RAW)\r\n//                     date\r\n//                     dateOnSaleTo\r\n//                     dateOnSaleFrom\r\n//                     averageRating\r\n//                     manageStock\r\n//                     image {\r\n//                       sourceUrl(size: MEDIUM)\r\n//                     }\r\n//                     databaseId\r\n//                     stockQuantity\r\n//                     stockStatus\r\n//                   }\r\n//                 }\r\n//                 pageInfo {\r\n//                   hasNextPage\r\n//                   hasPreviousPage\r\n//                 }\r\n//               }\r\n//             }\r\n//             `})\r\n//         })\r\n//         // .then(response => response.json())\r\n//         .then((response) => response.data.data.products.nodes)\r\n//         dispatch({\r\n//             type: PRODUCT_LIST_SUCCESS,\r\n//             playload: data\r\n//         })\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_LIST_FAIL,\r\n//             playload:\r\n//                 error.response && error.response.data.message ? error.response.data.message : error.message,\r\n//         });\r\n//     }\r\n// }\r\n\r\n\r\nexport const detailProduct = (slug) => async (dispatch) => {\r\n  const PRODUCT_API = `\r\n    product(id: \"${slug}\", idType: SLUG) {\r\n      id\r\n      name\r\n      slug\r\n      ... on SimpleProduct {\r\n        id\r\n        name\r\n      }\r\n    }`\r\n  try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST })\r\n      const data  = await \r\n      axios(`http://localhost/wordpress/graphql/`, {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          data: JSON.stringify({query: PRODUCT_API})\r\n      })\r\n      .then((response) => console.log(response))\r\n      dispatch({\r\n          type: PRODUCT_LIST_SUCCESS,\r\n          playload: data\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          playload:\r\n              error.response && error.response.data.message ? error.response.data.message : error.message,\r\n      });\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}