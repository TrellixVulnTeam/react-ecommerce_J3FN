{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\";\nexport const listProduct = visable => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(\"http://localhost/wordpress/graphql/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: `\n            {\n              products(first: ${visable}) {\n                nodes {\n                  ... on VariableProduct {\n                    id\n                    name\n                  }\n                  ... on ExternalProduct {\n                    id\n                    name\n                  }\n                  ... on GroupProduct {\n                    id\n                    name\n                  }\n                  ... on SimpleProduct {\n                    id\n                    name\n                    uri\n                    slug\n                    sku\n                    shortDescription(format: RENDERED)\n                    salePrice(format: FORMATTED)\n                    shippingClassId\n                    shippingRequired\n                    shippingTaxable\n                    reviewCount\n                    reviews {\n                      averageRating\n                      edges {\n                        rating\n                      }\n                    }\n                    regularPrice(format: FORMATTED)\n                    price(format: FORMATTED)\n                    onSale\n                    link\n                    featuredImageDatabaseId\n                    description(format: RAW)\n                    date\n                    dateOnSaleTo\n                    dateOnSaleFrom\n                    averageRating\n                    manageStock\n                    image {\n                      sourceUrl(size: MEDIUM)\n                    }\n                    databaseId\n                    stockQuantity\n                    stockStatus\n                  }\n                }\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n              }\n            }\n            `\n      })\n    }).then(response => response.data.data.products.nodes);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      playload: data\n    });\n    return data;\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      playload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailProduct = slug => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(`http://localhost/wordpress/graphql/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: `\n          {\n            product(id: \"${slug}\", idType: SLUG) {\n              id\n              name\n              slug\n              image {\n                sourceUrl(size: LARGE)\n                title(format: RENDERED)\n                description(format: RENDERED)\n              }\n              onSale\n              productCategories {\n                nodes {\n                  id\n                  name\n                }\n              }\n              reviews {\n                averageRating\n              }\n              reviewCount\n              reviewsAllowed\n            }\n          }\n          `\n      })\n    }).then(response => response.data.data.product.nodes);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      playload: data\n    });\n    return data;\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      playload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const getProducts = (numberShow) => {\n//   return dispatch => {\n//     dispatch\n//   }\n// }","map":{"version":3,"names":["axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProduct","visable","dispatch","type","data","method","headers","JSON","stringify","query","then","response","products","nodes","playload","error","message","detailProduct","slug","product"],"sources":["D:/ReactJS-Ecommerce/react-ecommerce/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\"\r\n\r\nexport const listProduct = (visable) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const data  = await \r\n        axios(\"http://localhost/wordpress/graphql/\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            data: JSON.stringify({query:  `\r\n            {\r\n              products(first: ${visable}) {\r\n                nodes {\r\n                  ... on VariableProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on ExternalProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on GroupProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on SimpleProduct {\r\n                    id\r\n                    name\r\n                    uri\r\n                    slug\r\n                    sku\r\n                    shortDescription(format: RENDERED)\r\n                    salePrice(format: FORMATTED)\r\n                    shippingClassId\r\n                    shippingRequired\r\n                    shippingTaxable\r\n                    reviewCount\r\n                    reviews {\r\n                      averageRating\r\n                      edges {\r\n                        rating\r\n                      }\r\n                    }\r\n                    regularPrice(format: FORMATTED)\r\n                    price(format: FORMATTED)\r\n                    onSale\r\n                    link\r\n                    featuredImageDatabaseId\r\n                    description(format: RAW)\r\n                    date\r\n                    dateOnSaleTo\r\n                    dateOnSaleFrom\r\n                    averageRating\r\n                    manageStock\r\n                    image {\r\n                      sourceUrl(size: MEDIUM)\r\n                    }\r\n                    databaseId\r\n                    stockQuantity\r\n                    stockStatus\r\n                  }\r\n                }\r\n                pageInfo {\r\n                  hasNextPage\r\n                  hasPreviousPage\r\n                }\r\n              }\r\n            }\r\n            `})\r\n        })\r\n        .then((response) => response.data.data.products.nodes)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            playload: data\r\n        })\r\n        return data;\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            playload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const detailProduct = (slug) => async (dispatch) => {\r\n  try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST })\r\n      const data  = await \r\n      axios(`http://localhost/wordpress/graphql/`, {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          data: JSON.stringify({query: `\r\n          {\r\n            product(id: \"${slug}\", idType: SLUG) {\r\n              id\r\n              name\r\n              slug\r\n              image {\r\n                sourceUrl(size: LARGE)\r\n                title(format: RENDERED)\r\n                description(format: RENDERED)\r\n              }\r\n              onSale\r\n              productCategories {\r\n                nodes {\r\n                  id\r\n                  name\r\n                }\r\n              }\r\n              reviews {\r\n                averageRating\r\n              }\r\n              reviewCount\r\n              reviewsAllowed\r\n            }\r\n          }\r\n          `})\r\n      })\r\n      .then((response) => response.data.data.product.nodes)\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        playload: data\r\n      })\r\n      return data;\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          playload:\r\n              error.response && error.response.data.message ? error.response.data.message : error.message,\r\n      });\r\n  }\r\n}\r\n\r\n// export const getProducts = (numberShow) => {\r\n//   return dispatch => {\r\n//     dispatch\r\n//   }\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}