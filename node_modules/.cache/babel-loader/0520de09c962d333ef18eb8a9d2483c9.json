{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS-Ecommerce\\\\react-ecommerce\\\\src\\\\App.js\";\nimport React from \"react\";\nimport gql from \"graphql-tag\";\nimport { graphql } from \"react-apollo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCTS = gql`\nquery NewQuery {\n  products {\n    edges {\n      node {\n        id\n        name\n        onSale\n        slug\n        sku\n        reviews {\n          averageRating\n          nodes {\n            content\n            date\n            approved\n          }\n        }\n      }\n    }\n  }\n}`;\n\nconst App = _ref => {\n  let {\n    data: {\n      loading,\n      products\n    }\n  } = _ref;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0110ang Loading Author...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: products.map(product => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n};\n\n_c = App;\nconst AppWithData = graphql(PRODUCTS)(App);\nexport default AppWithData;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","gql","graphql","PRODUCTS","App","data","loading","products","map","product","name","id","AppWithData"],"sources":["D:/ReactJS-Ecommerce/react-ecommerce/src/App.js"],"sourcesContent":["import React from \"react\";\nimport gql from \"graphql-tag\";\nimport {graphql} from \"react-apollo\";\n\nconst PRODUCTS = gql`\nquery NewQuery {\n  products {\n    edges {\n      node {\n        id\n        name\n        onSale\n        slug\n        sku\n        reviews {\n          averageRating\n          nodes {\n            content\n            date\n            approved\n          }\n        }\n      }\n    }\n  }\n}`\n\nconst App = ({ data: { loading, products } }) => {\n  if (loading) {\n      return <p>ƒêang Loading Author...</p>;\n  }\n  return (\n      <div className='App'>\n          {products.map((product) => {\n              return (\n                  <p key={product.id}>\n                      {product.name}\n                  </p>\n              );\n          })}\n      </div>\n  );\n};\n\nconst AppWithData = graphql(PRODUCTS)(App);\n\nexport default AppWithData;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,OAAR,QAAsB,cAAtB;;AAEA,MAAMC,QAAQ,GAAGF,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EArBA;;AAuBA,MAAMG,GAAG,GAAG,QAAqC;EAAA,IAApC;IAAEC,IAAI,EAAE;MAAEC,OAAF;MAAWC;IAAX;EAAR,CAAoC;;EAC/C,IAAID,OAAJ,EAAa;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EACD,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,UACKC,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;MACvB,oBACI;QAAA,UACKA,OAAO,CAACC;MADb,GAAQD,OAAO,CAACE,EAAhB;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CANA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAWD,CAfD;;KAAMP,G;AAiBN,MAAMQ,WAAW,GAAGV,OAAO,CAACC,QAAD,CAAP,CAAkBC,GAAlB,CAApB;AAEA,eAAeQ,WAAf"},"metadata":{},"sourceType":"module"}