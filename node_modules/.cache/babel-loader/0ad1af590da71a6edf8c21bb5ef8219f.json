{"ast":null,"code":"import axios from \"axios\";\nimport { useState } from \"react\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\";\nconst PRODUCTS_API = `\n{\n  products(first: 50) {\n    nodes {\n      ... on VariableProduct {\n        id\n        name\n      }\n      ... on ExternalProduct {\n        id\n        name\n      }\n      ... on GroupProduct {\n        id\n        name\n      }\n      ... on SimpleProduct {\n        id\n        name\n        uri\n        slug\n        sku\n        shortDescription(format: RENDERED)\n        salePrice(format: FORMATTED)\n        shippingClassId\n        shippingRequired\n        shippingTaxable\n        reviewCount\n        reviews {\n          averageRating\n          edges {\n            rating\n          }\n        }\n        regularPrice(format: FORMATTED)\n        price(format: FORMATTED)\n        onSale\n        link\n        featuredImageDatabaseId\n        description(format: RAW)\n        date\n        dateOnSaleTo\n        dateOnSaleFrom\n        averageRating\n        manageStock\n        image {\n          sourceUrl(size: MEDIUM)\n        }\n        databaseId\n        stockQuantity\n        stockStatus\n      }\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n`;\nexport const listProduct = () => {\n  var _s = $RefreshSig$();\n\n  return _s(async dispatch => {\n    _s();\n\n    const visable = useState([]);\n\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const data = await axios(\"http://localhost/wordpress/graphql/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: JSON.stringify({\n          query: `\n            {\n              products(first: ${visable}) {\n                nodes {\n                  ... on VariableProduct {\n                    id\n                    name\n                  }\n                  ... on ExternalProduct {\n                    id\n                    name\n                  }\n                  ... on GroupProduct {\n                    id\n                    name\n                  }\n                  ... on SimpleProduct {\n                    id\n                    name\n                    uri\n                    slug\n                    sku\n                    shortDescription(format: RENDERED)\n                    salePrice(format: FORMATTED)\n                    shippingClassId\n                    shippingRequired\n                    shippingTaxable\n                    reviewCount\n                    reviews {\n                      averageRating\n                      edges {\n                        rating\n                      }\n                    }\n                    regularPrice(format: FORMATTED)\n                    price(format: FORMATTED)\n                    onSale\n                    link\n                    featuredImageDatabaseId\n                    description(format: RAW)\n                    date\n                    dateOnSaleTo\n                    dateOnSaleFrom\n                    averageRating\n                    manageStock\n                    image {\n                      sourceUrl(size: MEDIUM)\n                    }\n                    databaseId\n                    stockQuantity\n                    stockStatus\n                  }\n                }\n                pageInfo {\n                  hasNextPage\n                  hasPreviousPage\n                }\n              }\n            }\n            `\n        })\n      }).then(response => response.data.data.products.nodes);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        playload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        playload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  }, \"JPkbXpSMqvOPx4xrlvdLaATE+vg=\");\n};\nexport const detailProduct = slug => async dispatch => {\n  const PRODUCT_API = `\n    product(id: \"${slug}\", idType: SLUG) {\n      id\n      name\n      slug\n      ... on SimpleProduct {\n        id\n        name\n      }\n    }`;\n\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const data = await axios(`http://localhost/wordpress/graphql/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify({\n        query: PRODUCT_API\n      })\n    }).then(response => console.log(response));\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      playload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      playload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","useState","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCTS_API","listProduct","dispatch","visable","type","data","method","headers","JSON","stringify","query","then","response","products","nodes","playload","error","message","detailProduct","slug","PRODUCT_API","console","log"],"sources":["D:/ReactJS-Ecommerce/react-ecommerce/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\"\r\n\r\nconst PRODUCTS_API = `\r\n{\r\n  products(first: 50) {\r\n    nodes {\r\n      ... on VariableProduct {\r\n        id\r\n        name\r\n      }\r\n      ... on ExternalProduct {\r\n        id\r\n        name\r\n      }\r\n      ... on GroupProduct {\r\n        id\r\n        name\r\n      }\r\n      ... on SimpleProduct {\r\n        id\r\n        name\r\n        uri\r\n        slug\r\n        sku\r\n        shortDescription(format: RENDERED)\r\n        salePrice(format: FORMATTED)\r\n        shippingClassId\r\n        shippingRequired\r\n        shippingTaxable\r\n        reviewCount\r\n        reviews {\r\n          averageRating\r\n          edges {\r\n            rating\r\n          }\r\n        }\r\n        regularPrice(format: FORMATTED)\r\n        price(format: FORMATTED)\r\n        onSale\r\n        link\r\n        featuredImageDatabaseId\r\n        description(format: RAW)\r\n        date\r\n        dateOnSaleTo\r\n        dateOnSaleFrom\r\n        averageRating\r\n        manageStock\r\n        image {\r\n          sourceUrl(size: MEDIUM)\r\n        }\r\n        databaseId\r\n        stockQuantity\r\n        stockStatus\r\n      }\r\n    }\r\n    pageInfo {\r\n      hasNextPage\r\n      hasPreviousPage\r\n    }\r\n  }\r\n}\r\n`\r\nexport const listProduct = () => async (dispatch) => {\r\n    const visable = useState([]);\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const data  = await \r\n        axios(\"http://localhost/wordpress/graphql/\", {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            data: JSON.stringify({query: `\r\n            {\r\n              products(first: ${visable}) {\r\n                nodes {\r\n                  ... on VariableProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on ExternalProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on GroupProduct {\r\n                    id\r\n                    name\r\n                  }\r\n                  ... on SimpleProduct {\r\n                    id\r\n                    name\r\n                    uri\r\n                    slug\r\n                    sku\r\n                    shortDescription(format: RENDERED)\r\n                    salePrice(format: FORMATTED)\r\n                    shippingClassId\r\n                    shippingRequired\r\n                    shippingTaxable\r\n                    reviewCount\r\n                    reviews {\r\n                      averageRating\r\n                      edges {\r\n                        rating\r\n                      }\r\n                    }\r\n                    regularPrice(format: FORMATTED)\r\n                    price(format: FORMATTED)\r\n                    onSale\r\n                    link\r\n                    featuredImageDatabaseId\r\n                    description(format: RAW)\r\n                    date\r\n                    dateOnSaleTo\r\n                    dateOnSaleFrom\r\n                    averageRating\r\n                    manageStock\r\n                    image {\r\n                      sourceUrl(size: MEDIUM)\r\n                    }\r\n                    databaseId\r\n                    stockQuantity\r\n                    stockStatus\r\n                  }\r\n                }\r\n                pageInfo {\r\n                  hasNextPage\r\n                  hasPreviousPage\r\n                }\r\n              }\r\n            }\r\n            `})\r\n        })\r\n        .then((response) => response.data.data.products.nodes)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            playload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            playload:\r\n                error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const detailProduct = (slug) => async (dispatch) => {\r\n  const PRODUCT_API = `\r\n    product(id: \"${slug}\", idType: SLUG) {\r\n      id\r\n      name\r\n      slug\r\n      ... on SimpleProduct {\r\n        id\r\n        name\r\n      }\r\n    }`\r\n  try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST })\r\n      const data  = await \r\n      axios(`http://localhost/wordpress/graphql/`, {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          data: JSON.stringify({query: PRODUCT_API})\r\n      })\r\n      .then((response) => console.log(response))\r\n      dispatch({\r\n          type: PRODUCT_LIST_SUCCESS,\r\n          playload: data\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_LIST_FAIL,\r\n          playload:\r\n              error.response && error.response.data.message ? error.response.data.message : error.message,\r\n      });\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,QAA8E,+BAA9E;AAEA,MAAMC,YAAY,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3DA;AA4DA,OAAO,MAAMC,WAAW,GAAG;EAAA;;EAAA,UAAM,MAAOC,QAAP,IAAoB;IAAA;;IACjD,MAAMC,OAAO,GAAGP,QAAQ,CAAC,EAAD,CAAxB;;IACA,IAAI;MACAM,QAAQ,CAAC;QAAEE,IAAI,EAAEN;MAAR,CAAD,CAAR;MACA,MAAMO,IAAI,GAAI,MACdV,KAAK,CAAC,qCAAD,EAAwC;QACzCW,MAAM,EAAE,MADiC;QAEzCC,OAAO,EAAE;UAAC,gBAAgB;QAAjB,CAFgC;QAGzCF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;UAACC,KAAK,EAAG;AAC1C;AACA,gCAAgCP,OAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QA3DiC,CAAf;MAHmC,CAAxC,CAAL,CAgECQ,IAhED,CAgEOC,QAAD,IAAcA,QAAQ,CAACP,IAAT,CAAcA,IAAd,CAAmBQ,QAAnB,CAA4BC,KAhEhD,CADA;MAkEAZ,QAAQ,CAAC;QACLE,IAAI,EAAEL,oBADD;QAELgB,QAAQ,EAAEV;MAFL,CAAD,CAAR;IAIH,CAxED,CAwEE,OAAOW,KAAP,EAAc;MACZd,QAAQ,CAAC;QACLE,IAAI,EAAEP,iBADD;QAELkB,QAAQ,EACJC,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBY,OAAtC,GAAgDD,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBY,OAApE,GAA8ED,KAAK,CAACC;MAHnF,CAAD,CAAR;IAKH;EACJ,CAjF0B;AAAA,CAApB;AAoFP,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU,MAAOjB,QAAP,IAAoB;EACzD,MAAMkB,WAAW,GAAI;AACvB,mBAAmBD,IAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MATE;;EAUA,IAAI;IACAjB,QAAQ,CAAC;MAAEE,IAAI,EAAEN;IAAR,CAAD,CAAR;IACA,MAAMO,IAAI,GAAI,MACdV,KAAK,CAAE,qCAAF,EAAwC;MACzCW,MAAM,EAAE,MADiC;MAEzCC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFgC;MAGzCF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAe;QAACC,KAAK,EAAEU;MAAR,CAAf;IAHmC,CAAxC,CAAL,CAKCT,IALD,CAKOC,QAAD,IAAcS,OAAO,CAACC,GAAR,CAAYV,QAAZ,CALpB,CADA;IAOAV,QAAQ,CAAC;MACLE,IAAI,EAAEL,oBADD;MAELgB,QAAQ,EAAEV;IAFL,CAAD,CAAR;EAIH,CAbD,CAaE,OAAOW,KAAP,EAAc;IACZd,QAAQ,CAAC;MACLE,IAAI,EAAEP,iBADD;MAELkB,QAAQ,EACJC,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBY,OAAtC,GAAgDD,KAAK,CAACJ,QAAN,CAAeP,IAAf,CAAoBY,OAApE,GAA8ED,KAAK,CAACC;IAHnF,CAAD,CAAR;EAKH;AACF,CA/BM"},"metadata":{},"sourceType":"module"}